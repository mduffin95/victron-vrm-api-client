# coding: utf-8

"""
    VRM API

    ## Introduction This document provides a brief overview of some of the available endpoints and their parameters. The API is a REST API, accepting JSON as request body. You can use the try-it tool to play around with it, or use software like Postman.  ## Authentication Most endpoints require authentication, using a JWT token. This token should be placed in the `x-authorization` field in the HTTP header. There are two types of tokens. - Bearer token. Uses the `Bearer <token_value>` format. This is used when logging in to VRM, for example. Can be retrieved from [/auth/login](/operations/auth/login) or [/auth/loginAsDemo](/operations/auth/loginAsDemo). - Access token. Uses the `Token <token_value>` format. This is commonly used for third party applications using the VRM API. Can be created using [/users/{idUser}/accesstokens/create](/operations/users/idUser/accesstokens/create).  ## Rate limiting Most endpoints are by default rate limited with a rolling window of max 200 requests, where every 0.33 seconds a request gets removed from the rolling window. (so on average maximum of 3 requests per second won't get rate limited). There are different types of ratelimiting in VRM. If you receive a 429 with a JSON response, you can check the Retry-After response header to check the amount of seconds you have to wait until retrying.  ## WARNING & DISCLAIMER Whilst publicly available, Victron Energy does not offer support to professional customers or end-users that implement features using the here documented functionality, except in really specific situations (i.e such as a special arrangement with a large OEM customer).  The recommended method for support on the VRM API is to use the Modifications section on Victron Community. This space is frequently visited by many people using the API, and other methods of integrating with Victron products. Direct company support is only offered on a limited basis via your Victron representative.  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.state_widgets_api import StateWidgetsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestStateWidgetsApi(unittest.TestCase):
    """StateWidgetsApi unit test stubs"""

    def setUp(self):
        self.api = StateWidgetsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_installationsid_sitewidgets_battery_external_relay_state_command(self):
        """Test case for installationsid_sitewidgets_battery_external_relay_state_command

        Battery external relay state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_battery_monitor_warnings_and_alarms(self):
        """Test case for installationsid_sitewidgets_battery_monitor_warnings_and_alarms

        Battery monitor warnings and alarms graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_battery_relay_state(self):
        """Test case for installationsid_sitewidgets_battery_relay_state

        Battery relay state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_charger_relay_state(self):
        """Test case for installationsid_sitewidgets_charger_relay_state

        Charger relay state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_charger_state(self):
        """Test case for installationsid_sitewidgets_charger_state

        Charger state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_ess_battery_life_state(self):
        """Test case for installationsid_sitewidgets_ess_battery_life_state

        ESS battery life state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_fuel_cell_state(self):
        """Test case for installationsid_sitewidgets_fuel_cell_state

        Fuel cell state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_gateway_relay_state(self):
        """Test case for installationsid_sitewidgets_gateway_relay_state

        Gateway relay state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_gateway_relay_two_state(self):
        """Test case for installationsid_sitewidgets_gateway_relay_two_state

        Gateway relay two state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_generator_state(self):
        """Test case for installationsid_sitewidgets_generator_state

        Generator state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_input_state(self):
        """Test case for installationsid_sitewidgets_input_state

        Input state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_inverter_charger_state(self):
        """Test case for installationsid_sitewidgets_inverter_charger_state

        Inverter charger state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_inverter_charger_warnings_and_alarms(self):
        """Test case for installationsid_sitewidgets_inverter_charger_warnings_and_alarms

        Inverter charger warnings and alarms graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_inverter_state(self):
        """Test case for installationsid_sitewidgets_inverter_state

        Inverter state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_mppt_state(self):
        """Test case for installationsid_sitewidgets_mppt_state

        MPPT state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_solar_charger_relay_state(self):
        """Test case for installationsid_sitewidgets_solar_charger_relay_state

        Solar charger relay state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_ve_bus_state(self):
        """Test case for installationsid_sitewidgets_ve_bus_state

        VE Bus state graph data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_ve_bus_warnings_and_alarms(self):
        """Test case for installationsid_sitewidgets_ve_bus_warnings_and_alarms

        VE Bus warnings and alarms graph data  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
