# coding: utf-8

"""
    VRM API

    ## Introduction This document provides a brief overview of some of the available endpoints and their parameters. The API is a REST API, accepting JSON as request body. You can use the try-it tool to play around with it, or use software like Postman.  ## Authentication Most endpoints require authentication, using a JWT token. This token should be placed in the `x-authorization` field in the HTTP header. There are two types of tokens. - Bearer token. Uses the `Bearer <token_value>` format. This is used when logging in to VRM, for example. Can be retrieved from [/auth/login](/operations/auth/login) or [/auth/loginAsDemo](/operations/auth/loginAsDemo). - Access token. Uses the `Token <token_value>` format. This is commonly used for third party applications using the VRM API. Can be created using [/users/{idUser}/accesstokens/create](/operations/users/idUser/accesstokens/create).  ## Rate limiting Most endpoints are by default rate limited with a rolling window of max 200 requests, where every 0.33 seconds a request gets removed from the rolling window. (so on average maximum of 3 requests per second won't get rate limited). There are different types of ratelimiting in VRM. If you receive a 429 with a JSON response, you can check the Retry-After response header to check the amount of seconds you have to wait until retrying.  ## WARNING & DISCLAIMER Whilst publicly available, Victron Energy does not offer support to professional customers or end-users that implement features using the here documented functionality, except in really specific situations (i.e such as a special arrangement with a large OEM customer).  The recommended method for support on the VRM API is to use the Modifications section on Victron Community. This space is frequently visited by many people using the API, and other methods of integrating with Victron products. Direct company support is only offered on a limited basis via your Victron representative.  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.summary_widgets_api import SummaryWidgetsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSummaryWidgetsApi(unittest.TestCase):
    """SummaryWidgetsApi unit test stubs"""

    def setUp(self):
        self.api = SummaryWidgetsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_installationsid_sitewidgets_battery_summary(self):
        """Test case for installationsid_sitewidgets_battery_summary

        Battery summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_bms_diagnostics(self):
        """Test case for installationsid_sitewidgets_bms_diagnostics

        BMS diagnostics summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_dc_meter(self):
        """Test case for installationsid_sitewidgets_dc_meter

        DC meter summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_ev_charger_summary(self):
        """Test case for installationsid_sitewidgets_ev_charger_summary

        EV charger summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_global_link_summary(self):
        """Test case for installationsid_sitewidgets_global_link_summary

        GlobalLink summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_historic_data(self):
        """Test case for installationsid_sitewidgets_historic_data

        Historic summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_io_extender_in_out(self):
        """Test case for installationsid_sitewidgets_io_extender_in_out

        IO extender input and output summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_lithium_bms(self):
        """Test case for installationsid_sitewidgets_lithium_bms

        Lithium BMS summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_meteorological_sensor(self):
        """Test case for installationsid_sitewidgets_meteorological_sensor

        Meteorological summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_motor_summary(self):
        """Test case for installationsid_sitewidgets_motor_summary

        Motor summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_pv_inverter_status(self):
        """Test case for installationsid_sitewidgets_pv_inverter_status

        PV inverter summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_solar_charger_summary(self):
        """Test case for installationsid_sitewidgets_solar_charger_summary

        Solar charger summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_status(self):
        """Test case for installationsid_sitewidgets_status

        System overview summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_tank_summary(self):
        """Test case for installationsid_sitewidgets_tank_summary

        Tank summary data  # noqa: E501
        """
        pass

    def test_installationsid_sitewidgets_temp_summary_and_graph(self):
        """Test case for installationsid_sitewidgets_temp_summary_and_graph

        Temperature summary data  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
